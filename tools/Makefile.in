#
# Copyright (C) 2001-2004 Sistina Software, Inc. All rights reserved.
# Copyright (C) 2004-2012 Red Hat, Inc. All rights reserved.
#
# This file is part of LVM2.
#
# This copyrighted material is made available to anyone wishing to use,
# modify, copy, or redistribute it subject to the terms and conditions
# of the GNU General Public License v.2.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

TOOLS_SOURCE=\
	tools/command.c \
	tools/dumpconfig.c \
	tools/formats.c \
	tools/lvchange.c \
	tools/lvconvert.c \
	tools/lvconvert_poll.c \
	tools/lvcreate.c \
	tools/lvdisplay.c \
	tools/lvextend.c \
	tools/lvmcmdline.c \
	tools/lvmdiskscan.c \
	tools/lvreduce.c \
	tools/lvremove.c \
	tools/lvrename.c \
	tools/lvresize.c \
	tools/lvscan.c \
	tools/polldaemon.c \
	tools/pvchange.c \
	tools/pvck.c \
	tools/pvcreate.c \
	tools/pvdisplay.c \
	tools/pvmove.c \
	tools/pvmove_poll.c \
	tools/pvremove.c \
	tools/pvresize.c \
	tools/pvscan.c \
	tools/reporter.c \
	tools/segtypes.c \
	tools/tags.c \
	tools/toollib.c \
	tools/vgcfgbackup.c \
	tools/vgcfgrestore.c \
	tools/vgchange.c \
	tools/vgck.c \
	tools/vgcreate.c \
	tools/vgconvert.c \
	tools/vgdisplay.c \
	tools/vgexport.c \
	tools/vgextend.c \
	tools/vgimport.c \
	tools/vgmerge.c \
	tools/vgmknodes.c \
	tools/lvpoll.c \
	tools/vgimportclone.c \
	tools/vgreduce.c \
	tools/vgremove.c \
	tools/vgrename.c \
	tools/vgscan.c \
	tools/vgsplit.c

TOOLS_DEPENDS=$(subst .c,.d,$(TOOLS_SOURCE))
TOOLS_OBJECTS=$(subst .c,.o,$(TOOLS_SOURCE))
CLEAN_TARGETS+=tools/*.o tools/*.d

-include $(TOOLS_DEPENDS)

TOOLS_SOURCES2=\
	tools/dmsetup.c \
	tools/lvm.c \
	tools/lvm2cmd-static.c \
	tools/lvm2cmd.c \
	tools/lvmcmdlib.c \
	tools/man-generator.c
TOOLS_DEPENDS2=$(subst .c,.d,$(TOOLS_SOURCE2))
TOOLS_OBJECTS2=$(subst .c,.o,$(TOOLS_SOURCE2))

-include $(TOOLS_DEPENDS2)

$(TOOLS_SOURCE) $(TOOLS_SOURCE2): tools/cmds.h tools/command-count.h tools/command-lines-input.h

TARGETS=\
	tools/.commands \
	tools/liblvm2cmd.a \
	tools/lvm \
	tools/man-generator

TARGETS_DM = tools/dmsetup

INSTALL_LVM_TARGETS = install_tools_dynamic
INSTALL_DMSETUP_TARGETS = install_dmsetup_dynamic
INSTALL_CMDLIB_TARGETS = install_cmdlib_dynamic install_cmdlib_include

ifeq ("@STATIC_LINK@", "yes")
  TARGETS += tools/lvm.static
  TARGETS_DM += tools/dmsetup.static
  INSTALL_LVM_TARGETS += install_tools_static
  INSTALL_DMSETUP_TARGETS += install_dmsetup_static
  INSTALL_CMDLIB_TARGETS += install_cmdlib_static
endif

LVMLIBS = $(LVMINTERNAL_LIBS) -ldevmapper -laio
LIB_VERSION = $(LIB_VERSION_LVM)

CLEAN_TARGETS += \
	tools/liblvm2cmd.$(LIB_SUFFIX) $(TARGETS_DM) \
	tools/liblvm2cmd.$(LIB_SUFFIX).$(LIB_VERSION) tools/lvm-static.o \
	tools/liblvm2cmd-static.a dmsetup.static lvm.static \
	$(LDDEPS) tools/.exported_symbols_generated \
	tools/cmds.h tools/command-lines-input.h tools/command-count.h tools/man-generator.c

-include tools/lvm-static.d

ifeq ("@CMDLIB@", "yes")
	TARGETS += tools/liblvm2cmd.$(LIB_SUFFIX).$(LIB_VERSION)
	INSTALL_LVM_TARGETS += $(INSTALL_CMDLIB_TARGETS)
endif

CLEAN_TARGETS+=$(TARGETS) $(TARGETS_DM)

EXPORTED_HEADER = tools/lvm2cmd.h
EXPORTED_FN_PREFIX = lvm2

#CFLOW_LIST = lvmcmdlib.c lvm2cmd.c
#CFLOW_LIST_TARGET = liblvm2cmd.cflow
#CFLOW_TARGET = lvm

device-mapper: $(TARGETS_DM)

CFLAGS_dmsetup.o += $(UDEV_CFLAGS) $(EXTRA_EXEC_CFLAGS)

-include tools/dmsetup.d

tools/dmsetup: tools/dmsetup.o libdm/libdevmapper.$(LIB_SUFFIX)
	@echo "    [CC] $@"
	$(Q) $(CC) $(CFLAGS) $(LDFLAGS) $(EXTRA_EXEC_LDFLAGS) $(ELDFLAGS) \
	      -o $@ tools/dmsetup.o -ldevmapper $(LIBS)

tools/dmsetup.static: tools/dmsetup.o $(interfacebuilddir)/libdevmapper.a
	@echo "    [CC] $@"
	$(Q) $(CC) $(CFLAGS) $(LDFLAGS) -static -L$(interfacebuilddir) \
	      -o $@ dmsetup.o -ldevmapper $(M_LIBS) $(PTHREAD_LIBS) $(STATIC_LIBS) $(LIBS)

CFLAGS_lvm.o += $(EXTRA_EXEC_CFLAGS)

INCLUDES += -I./tools

-include tools/lvm.d

tools/lvm: $(TOOLS_OBJECTS) tools/lvm.o lib/liblvm-internal.a libdaemon/client/libdaemonclient.a
	@echo "    [CC] $@"
	$(Q) $(CC) $(CFLAGS) $(LDFLAGS) $(EXTRA_EXEC_LDFLAGS) $(ELDFLAGS) -o $@ $(TOOLS_OBJECTS) tools/lvm.o \
		$(LVMLIBS) $(READLINE_LIBS) $(LIBS)

CLEAN_TARGETS+=tools/man-generator.c
tools/man-generator.c: tools/command.c
	@echo "    [LN] $@"
	$(Q) $(LN_S) -f command.c $@

tools/man-generator.o: CFLAGS += -DMAN_PAGE_GENERATOR
tools/man-generator: tools/man-generator.o
	@echo "    [LD] $@"
	$(Q) $(CC) $(CFLAGS) -o $@ $<

-include tools/man-generator.d

ifeq ("@BUILD_LVMETAD@", "yes")
tools/lvm: $(top_builddir)/libdaemon/client/libdaemonclient.a
endif

tools/lvm.static: $(TOOLS_OBJECTS) tools/lvm-static.o lib/liblvm-internal.a  $(interfacebuilddir)/libdevmapper.a
	@echo "    [CC] $@"
	$(Q) $(CC) $(CFLAGS) $(LDFLAGS) -static -L$(interfacebuilddir) -o $@ \
	      $(TOOLS_OBJECTS) tools/lvm-static.o $(LVMLIBS) $(STATIC_LIBS) $(LIBS)

-include tools/lvmcmdlib.d tools/lvm2cmd.d tools/lvm2cmd-static.d

tools/liblvm2cmd.a: lib/liblvm-internal.a $(TOOLS_OBJECTS) tools/lvmcmdlib.o tools/lvm2cmd.o
	@echo "    [AR] $@"
	$(Q) cat lib/liblvm-internal.a > $@
	$(Q) $(AR) rs $@ $(TOOLS_OBJECTS) tools/lvmcmdlib.o tools/lvm2cmd.o > /dev/null

tools/liblvm2cmd-static.a: lib/liblvm-internal.a $(TOOLS_OBJECTS) tools/lvmcmdlib.o tools/lvm2cmd-static.o
	@echo "    [AR] $@"
	$(Q) cat lib/liblvm-internal.a > $@
	$(Q) $(AR) rs $@ $(TOOLS_OBJECTS) tools/lvmcmdlib.o tools/lvm2cmd-static.o > /dev/null

tools/liblvm2cmd.$(LIB_SUFFIX): tools/liblvm2cmd.a $(LDDEPS)
	@echo "    [CC] $@"
	$(Q) $(CC) -shared -Wl,-soname,$@.$(LIB_VERSION) \
		$(CFLAGS) $(CLDFLAGS) -o $@ \
		@CLDWHOLEARCHIVE@ tools/liblvm2cmd.a @CLDNOWHOLEARCHIVE@ \
		$(LVMLIBS) $(LIBS)

tools/liblvm2cmd.$(LIB_SUFFIX).$(LIB_VERSION): tools/liblvm2cmd.$(LIB_SUFFIX)
	@echo "    [LN] $@"
	$(Q) $(LN_S) -f $< $@

tools/.commands: tools/commands.h tools/cmdnames.h tools/Makefile
	@echo "    [CC] $<"
	$(Q) $(CC) -E -P tools/cmdnames.h 2> /dev/null | \
		$(EGREP) -v '^ *(|#.*|config|devtypes|dumpconfig|formats|fullreport|help|lastlog|lvmchange|lvpoll|pvdata|segtypes|systemid|tags|version) *$$' > .commands

tools/command-count.h: tools/command-lines.in tools/Makefile
	@echo "    [GEN] $@"
	$(Q) set -o pipefail && \
	( cat tools/license.inc && \
	  echo "/* Do not edit. This file is generated by the Makefile. */" && \
	  echo -n "#define COMMAND_COUNT " && \
	  $(GREP) '^ID:' tools/command-lines.in | $(WC) -l \
	) > $@

tools/cmds.h: tools/command-lines.in tools/Makefile
	@echo "    [GEN] $@"
	$(Q) set -o pipefail && \
	( cat tools/license.inc && \
	  echo "/* Do not edit. This file is generated by the Makefile. */" && \
	  echo "cmd(CMD_NONE, none)" && \
	  $(GREP) '^ID:' tools/command-lines.in | $(SORT) -u | $(AWK) '{print "cmd(" $$2 "_CMD, " $$2 ")"}' && \
	  echo "cmd(CMD_COUNT, count)" \
	) > $@

tools/command-lines-input.h: tools/command-lines.in tools/Makefile
	@echo "    [GEN] $@"
	$(Q) set -o pipefail && \
	( cat tools/license.inc && \
	  echo "/* Do not edit. This file is generated by the Makefile. */" && \
	  echo -en "const char _command_input[] =\n\n\"" && \
	  $(EGREP) -v '^#|\-\-\-|^$$' tools/command-lines.in | $(AWK) 'BEGIN {ORS = "\\n\"\n\""} //' && \
	  echo "\\n\";" \
	) > $@

# FIXME: dep generation takes care of this surely?
#$(SOURCES:%.c=%.d) $(SOURCES2:%.c=%.d): command-lines-input.h command-count.h cmds.h
#$(SOURCES:%.c=%.o) $(SOURCES2:%.c=%.o): command-lines-input.h command-count.h cmds.h

# FIXME: put back
#ifneq ("$(CFLOW_CMD)", "")
#CFLOW_SOURCES = $(addprefix $(srcdir)/, $(SOURCES))
#-include $(top_builddir)/libdm/libdevmapper.cflow
#-include $(top_builddir)/lib/liblvm-internal.cflow
#endif

.PHONY: install_cmdlib_dynamic install_cmdlib_static install_cmdlib_include \
	install_tools_dynamic install_tools_static \
	install_dmsetup_dynamic install_dmsetup_static

install_cmdlib_include: tools/lvm2cmd.h
	@echo "    [INSTALL] $<"
	$(Q) $(INSTALL_DATA) -D $< $(includedir)/$(<F)

install_cmdlib_dynamic: tools/liblvm2cmd.$(LIB_SUFFIX)
	@echo "    [INSTALL] $<"
	$(Q) $(INSTALL_PROGRAM) -D $< $(libdir)/$(<F).$(LIB_VERSION)
	$(Q) $(INSTALL_DIR) $(usrlibdir)
	$(Q) $(LN_S) -f $(USRLIB_RELPATH)$(<F).$(LIB_VERSION) $(usrlibdir)/$(<F)

install_cmdlib_static: tools/liblvm2cmd-static.a
	@echo "    [INSTALL] $<"
	$(Q) $(INSTALL_DATA) -D $< $(usrlibdir)/liblvm2cmd.a

install_tools_dynamic: tools/lvm tools/.commands
	@echo "    [INSTALL] $<"
	$(Q) $(INSTALL_PROGRAM) -D tools/lvm $(sbindir)/lvm
	@echo Creating symbolic links for individual commands in $(sbindir)
	@for v in `cat .commands`; do \
		echo "$(LN_S) -f lvm $(sbindir)/$$v"; \
		$(LN_S) -f lvm $(sbindir)/$$v; \
	done;

install_tools_static: tools/lvm.static
	@echo "    [INSTALL] $<"
	$(Q) $(INSTALL_PROGRAM) -D $< $(staticdir)/$(<F)

install_dmsetup_dynamic: tools/dmsetup
	@echo "    [INSTALL] $<"
	$(Q) $(INSTALL_PROGRAM) -D $< $(sbindir)/$(<F)
	$(Q) $(LN_S) -f $(<F) $(sbindir)/dmstats

install_dmsetup_static: tools/dmsetup.static
	@echo "    [INSTALL] $<"
	$(Q) $(INSTALL_PROGRAM) -D $< $(staticdir)/$(<F)
	$(Q) $(LN_S) -f $(<F) $(staticdir)/dmstats

install_device-mapper: $(INSTALL_DMSETUP_TARGETS)

install_lvm2: $(INSTALL_LVM_TARGETS)

install: install_lvm2 install_device-mapper
